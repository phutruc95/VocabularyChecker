@model IEnumerable<VocabularyChecker_Model.Exercise>

@{
    ViewBag.Title = "Index";
}

<h2>Exercises</h2>

<ol class="exercise">
    @foreach (var exercise in Model)
    {
        <li class="">@Html.Raw(exercise.Content)</li>
    }
</ol>
<button id="checker">Check</button>

<style>
    .exercise li {
        position: relative;
    }

        .exercise li:before {
            position: absolute;
            top: 0;
            left: -30px;
        }

        .exercise li.true::before {
    content: "\2714";
    color: green;
}

        .exercise li.false::before {
    content: "\2718";
    color: red;
}

    .ex-input {
        color: blue;
    }

        .ex-input:focus {
            color: blueviolet;
        }
</style>
<script>
    class ExInput {
        constructor(id) {
            this.Ele = $(id);
            this.pointer = 0;

            this.resetWord();

            let self = this;
            this.Ele.keypress(function (e) {
                if (self.pointer >= 0 && self.pointer < self.WordLength) {
                    self.Word = self.Word.substr(0, self.pointer) + e.key + self.Word.substr(self.pointer + 1);
                    self.Ele.html(self.Word);
                    self.pointer++;
                }
            });
            this.Ele.keydown(function (e) {
                if (e.keyCode == 8) {
                    if (self.pointer > 0) {
                        self.pointer--;
                        self.Word = self.Word.substr(0, self.pointer) + '_' + self.Word.substr(self.pointer + 1);
                        self.Ele.html(self.Word);
                    }
                }
                else if (e.keyCode == 46) {
                    self.resetWord();
                }
            });
        }

        get WordLength() {
            return parseInt(this.Ele.attr('word-length'));
        }

        resetWord() {
            this.Word = '';
            for (var i = 0; i < this.WordLength; i++) {
                this.Word += '_';
            }
            this.Ele.html(this.Word);
            this.pointer = 0;
        }
    }

    var lstExInput = [];
    $(document).ready(function () {
        $('.ex-input').each(function (i, item) {
            let id = $(item).attr('id');
            lstExInput.push(new ExInput('#' + id));
        });

        $('#checker').on('click', function () {
            checkAnswers();
        });
    });

    function searializeAnswers() {
        var dataArr = [];
        $.each(lstExInput, function (i, item) {
            dataArr.push({
                ID: item.Ele.data('id'),
                KeyWordAnswer: item.Word.replace(/_/g, "")
            });
        });
        return JSON.stringify(dataArr);
    }

    function checkAnswers() {
        $('.ex-input').parent('li').removeClass('true');
        $('.ex-input').parent('li').removeClass('false');
        $.ajax({
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            url: "@Url.Action("CheckAnswers", "Exercises")",
            data: searializeAnswers(),
            beforeSend: function () {

            },
            success: function (res) {
                $.each(res, function (i, item) {
                    $('#ex' + item.ID + '-input').parent('li').addClass(item.IsCorrect.toString());
                });
            },
            error: function (xhr) { // if error occured

            },
            complete: function () {

            }
        });
    }
</script>